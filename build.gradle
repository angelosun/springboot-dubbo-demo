buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }
}

group 'com.angelo'
version '1.0-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenLocal()
    mavenCentral()
}

//设置jdk的版本
sourceCompatibility = 1.8
targetCompatibility = 1.8



dependencies {

    //compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    // https://mvnrepository.com/artifact/com.alibaba/dubbo
    compile('com.alibaba:dubbo:2.5.3') {
        exclude group:'org.springframework'
    }
    compile('com.101tec:zkclient:0.10')

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

def defaultProperty(propertyName, defaultValue) {
    return hasProperty(propertyName) ? project[propertyName] : defaultValue
}

ext {
    env = defaultProperty('env', 'dev')
}

gradle.taskGraph.whenReady { taskGraph ->
    //编译的时候放入资源
    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources/${env}"]
            }
        }
    }

}

